services:
  # Database Service
  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - backend

  # Node.js Application Service
  node-service:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      DB_HOST: ${DB_HOST}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./api:/usr/src/app
    working_dir: /usr/src/app
    command: npm start
    depends_on:
      - db
    networks:
      - backend

  # Nginx Web Server Service
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./api/public:/usr/share/nginx/html
    depends_on:
      - node-service
    networks:
      - backend

# Volumes
volumes:
  db_data:

# Networks
networks:
  backend:
    driver: bridge
